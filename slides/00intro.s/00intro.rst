-------------------------------------------------------------------------
コードリーディング演習: はじめに
-------------------------------------------------------------------------

.. include:: ../header.rst

ソースコードを読めると何が良いか
-------------------------------------------------------------------------
* 研究活動において
* 業務として(学術的な研究活動から離れた場合)

研究活動において(1): 引き継ぎ
-------------------------------------------------------------------------
* 修了/就職する先輩から研究を引き継く。
* 研究成果には何らかのプログラムが含まれている。
* 先輩は去ってしまったがプログラムが十分に文章化されていない。
* 不具合の修正や拡張が必要になった。

研究活動において(2): FOSSの拡張
-------------------------------------------------------------------------
* 研究成果を既に実用化されているソフトウェアに結びつけたい。
* フリーソフトウェア/オープンソースソフトウェア(FOSS)に研究成果をのせる。
* 例

    - 最適化の手法: gccコンパイラ、openjdk java処理系
    - ネットワークプロトコル: linuxカーネル、 netbsdカーネル
    	= usbip(http://usbip.sourceforge.net/)
    - 暗号化手法: opensslライブラリ、firefoxウェブブラウザ
    - ...

業務として
-------------------------------------------------------------------------
* 開発業務

  - サードパーティ製のライブラリやフレームワークの活用

    + 保守契約がない場合: 自力で調べる。
    + 保守契約がある場合: 保守部門からの回答を確認できる。

* 自社開発したソフトウェアの保守業務

  - 不具合の修正
  - 脆弱性への対応
  
演習の前提
-------------------------------------------------------------------------
* C言語
* GNU/Linux利用経験

演習の前提(1): C言語
-------------------------------------------------------------------------
* 300行程度のプログラムを書いたことがある。
* 構造体、ポインタについて知っている。
* 分割コンパイルしたことがある。
* malloc/freeしたことがあり、その意味を知っている。

演習の前提(2): GNU/Linux利用経験
-------------------------------------------------------------------------
- コマンドラインインターフェイス

    * プログラムを起動できる。
    * プロセスを停止させる方法としてcontrol-cを知っている。
    * パイプラインを組んだことがある。

- ページャー(less)

    * ファイルのオープン、終了の方法を知っている。
    * 前方、後方スクロールができる。
    * 前方、後方文字列サーチができる。

- エディタ

    * ファイルのオープン、編集、保存の方法を知っている。
    * 前方、後方文字列サーチができる。

演習の目標
-------------------------------------------------------------------------
* オープンソースソフトウェアについてソースコードを入手できるようになる。
* 500行程度、複数のソースファイルからなる、現実に使われているプログラム
  について、制御フロー、データフローを追跡することで、そのソフトウェア
  の動作を説明できるようになる。
* より大きな規模のプログラムについても、混乱することなく計画立てて読め
  るようにコードリーディングの作業モデルを獲得する。

アジェンダ: 1日目
-------------------------------------------------------------------------
* 読解の環境
* 読解の対象
* 演習1: ソースコードの入手
* ツール
* 演習2: main関数の探索

アジェンダ: 2日目
-------------------------------------------------------------------------
* C言語復習
* コードリーディングのモデル
* ソースコード以外の情報源
* 演習3

アジェンダ: 3日目
-------------------------------------------------------------------------
.. * コードパターン: 関数テーブル
.. * コードパターン: 構造体の重ね合せによるオブジェクトシステムの実現
.. * 演習5
.. * ...

* ビルド処理
* 効率の良いコードリーディング
* コードパターン: データ型と操作関数群
* コードパターン: 関数ポインタとコールバック関数
* 演習4


演習0: 3日間を通した課題
-------------------------------------------------------------------------

.. include:: ../../lab0-body.rst
